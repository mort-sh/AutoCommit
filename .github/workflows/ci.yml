name: CI Checks

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build_and_test: # Renamed for clarity
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Allow other matrix jobs to continue if one fails
      matrix:
        # Keep 3.10 for broader compatibility check, 3.12 as primary, 3.13 as future
        python-version: ["3.10", "3.12", "3.13"]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5 # Use latest major version
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      shell: bash
    - name: Check uv version
      run: uv --version

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv # Default uv cache location
        # Use uv.lock hash as the primary key
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        # Fallback key if lock file hasn't changed
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Create virtual environment
      run: uv venv # Creates .venv and uv automatically uses it

    - name: Install dependencies
      run: uv pip install -e .[dev] # Install project and dev dependencies

    - name: Check formatting with ruff
      run: |
        source .venv/bin/activate
        ruff format --check $(git ls-files '*.py')

    - name: Lint with ruff
      run: |
        source .venv/bin/activate
        ruff check $(git ls-files '*.py')


    - name: Run unit tests
      run: |
        source .venv/bin/activate
        pytest -v

    - name: Scan dependencies for vulnerabilities
      run: |
        source .venv/bin/activate
        uv pip uninstall autocommit
        uv run pip-audit -v -f "markdown"
